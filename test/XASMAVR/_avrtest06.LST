AVR Macro-Assembler, Version 2.1                          29/12/2024  PAGE   1
Test: Conditional assembly

 LOC       OBJ                   LINE   SOURCE

                                    1   ;#define XASMAVR via commandline option '/DXASMAVR'
                                    2   ;----------------------------------,
                                    3   #ifdef XASMAVR			   ;
                                    4    .TITLE Test: Conditional assembly
                                    5    .PAGELENGTH(84)		   ;
                                    6    .PAGEWIDTH(120)		   ;
                                    7    .SYMBOLS			   ;
                                    8    .MODEL BYTE 			   ;
                                    9    .DEVICE ATxmega384C3		   ;
                                   10   #else				   ;
                                   12   #endif ;XASMAVR		   	   ;
                                   13   ;----------------------------------'
                                   14   ;;ha;;#define SUPPRESS ;; Suppress all
                                   15   #ifndef SUPPRESS
                                   16   
                                   17   .ifndef FOO1				;;ha;;                .ifndef FOO1
 00000000  00 00           :C      18     nop         ; some code here		;;ha;;  000000 0000     nop ; some code here
 00000002  0005            :C      19     .DW label1				;;ha;;  000001 0005     .dw label1
 00000004  0100            :C      20     .DW FOO1				;;ha;;  000002 0111     .dw FOO1
                                   21   .endif					;;ha;;                .endif
 00000006  0005            :C      22     .DW label1				;;ha;;  000003 0005     .dw label1
 00000008  00 C0           :C      23     rjmp label1 ; more code 	        ;;ha;;	000004 c000     rjmp label1 ; more cod
 = 00000100                        24     .EQU FOO1 = $100			;;ha;;  = 00000100      .equ FOO1 = $100
 0000000A  00 00           :C      25     label1: nop				;;ha;;  000005 0000     label1: nop
                                   26   ;------------------------------		;;ha;;                ;------------------------
                                   27   
                                   28   .ifdef FOO2				;;ha;;		      .ifdef FOO2
                                   32   .endif					;;ha;;                .endif
 0000000C  0008            :C      33     .dw label2				;;ha;;  000006 0008     .dw label2
 0000000E  00 C0           :C      34     rjmp label2 ; more code here		;;ha;;  000007 c000     rjmp label2 ; more code 
 = 00000200                        35     .EQU FOO2 = $200			;;ha;;  = 00000200      .equ FOO2 = $200
 00000010  00 00           :C      36     label2: nop				;;ha;;  000008 0000     label2: nop
                                   37   ;------------------------------		;;ha;;                ;------------------------
                                   38   
                                   39   .ifdef FOO3				;;ha;;		      .ifdef FOO3
                                   46   .endif					;;ha;;		      .endif				
                                   47   ;------------------------------		;;ha;;		      ;------------------------------

                                   48   
                                   49   .ifndef FOO4				;;ha;;	              .ifndef FOO4
 00000012  00 00           :C      50     nop         ; some code here		;;ha;;  000009 0000    nop         ; some code h
 00000014  000D            :C      51     .DW LABEL4				;;ha;;  00000a 000d    .DW LABEL4
 00000016  0400            :C      52     .DW FOO4				;;ha;;  00000b 0400    .DW FOO4
 00000018  00 C0           :C      53     rjmp label4 ; more code here		;;ha;;  00000c c000    rjmp label4 ; more code h
 = 00000400                        54     .EQU FOO4 = $400			;;ha;;  = 00000400     .EQU FOO4 = $400
 0000001A  00 00           :C      55     label4: nop				;;ha;;  00000d 0000    label4: nop
                                   56   .endif					;;ha;;                .endif
                                   57   ;------------------------------		;;ha;;                ;------------------------
                                   58   
                                   59   ; .IF.IFDEF.IFNDEF.ELIF.ELSE.ENDIF
                                   60   .IF 1					;;ha;;           .IF 1
 0000001C  11 AA BB FF     :C      61     .DB     $11,$AA,$BB,255		;;ha;;  000000 11AABBFF .DB $11,$AA,$BB,255
                                   62     .IF 0                 		;;ha;;             .IF 0                 
                                   64     .ELIF 1               ;=.ELSEIF a	;;ha;;  000002 0155     .DB $01,$55
 00000020  01 55           :C      65       .DB     $01,$55			;;ha;;  
                                   66     .ELIF 1               ;=.ELSEIF b	;;ha;;  	   .ELIF 1                 ;=.ELSEI
                                   84     .ENDIF
                                   85   .ENDIF
                                   86   ;---------------------------------------
                                   87   
                                   88   .IF 2                           	;;ha;;           .IF 2                         
 00000022  11 AA 0F FF     :C      89     .DB     $11,$AA,15,255		;;ha;;  000003 11AA0FFF .DB $11,$AA,15,255
                                   90     .IF 0                         	;;ha;;  
                                   92     .ELIF 1                  ;=.ELSEIF a	;;ha;;             .ELIF 1               
 00000026  01 55 0F FF     :C      93       .DB     $01,$55,15,255		;;ha;;  000005 01550FFF .DB $01,$55,15,255
                                   94     .ELIF 0                  ;=.ELSEIF b	;;ha;;  
                                  112     .ENDIF
                                  113   .ENDIF
                                  114   ; -------------------------------------------
                                  115   
                                  116   .IFNDEF CPU_Clock                       
 0000002A  7840            :C     117           .DW     LWRD(CPU_Clock)         
 = 017D7840                       118           .EQU    CPU_Clock = 25000000    
                                  119   .ENDIF                                  
                                  120   .IFDEF CPU_Clock                        
 0000002C  7840            :C     121           .DW     LWRD(CPU_Clock)
                                  122   .ENDIF                                  
                                  123   .IFNDEF CPU_Clock                       
                                  125   .ENDIF                                  
 = 000186A0                       126   	.SET    CPU_Clock1 = 100000     	
 0000002E  86A0            :C     127   	.DW     LWRD(CPU_Clock1)
                                  128   .IFNDEF CPU_Clock1                      
AVR Macro-Assembler, Version 2.1                          29/12/2024  PAGE   2
Test: Conditional assembly

 LOC       OBJ                   LINE   SOURCE

                                  131   .ENDIF                                  
 00000030  7840            :C     132   	.DW     LWRD(CPU_Clock)
 00000032  86A0            :C     133   	.DW     LWRD(CPU_Clock1)
                                  134   ; -------------------------------------------
                                  135   
 = 00708000                       136   .SET freqHz   = 7372800                   
 = 00000087                       137   .SET cyclTime = 1000000000 / freqHz     
                                  138   
 = 00000001                       139   .SET cycles = ((1+cyclTime-1) / cyclTime-0) ;; +1 
                                  140   #if (cycles > (255 * 3 + 2))
                                  142   #else			 		    ;; #else - #if
                                  143     #if (cycles > 6)	 
                                  149     #endif
                                  150     #if (cycles > 0)			    ;; #if - #if
                                  151       #if (cycles & 4)
                                  154       #endif
                                  155       #if (cycles & 2)
                                  157       #endif
                                  158       #if (cycles & 1)
 00000034  00 00           :C     159   	nop
                                  160       #endif
                                  161     #endif
                                  162   #endif
                                  163   
                                  164   ; -------------------------------------------
                                  165   
 = 00000001                       166   .SET cycles = ((1+cyclTime-1) / cyclTime-0) ;; +1 
                                  167   .if (cycles > (255 * 3 + 2))
                                  175   .elif (cycles > 0)			    ;; #elif - #if
                                  176     .if (cycles & 4)
                                  179     .endif
                                  180     .if (cycles & 2)
                                  182     .endif
                                  183   .elif (cycles & 1)			    ;; #elif
                                  185   .endif
                                  186   ; -------------------------------------------
                                  187   
 = FFFFFFFF                       188   .SET cycles = ((1+cyclTime-1) / cyclTime-2)  ;; -2
 00000036  FFFF            :C     189       	.DW cycles
 00000038  0000            :C     190       	.DW (cycles > 0)
                                  191   .if (cycles > (255 * 3 + 2))					 
                                  213   .ENDIF
                                  214   
                                  215   ; -------------------------------------------
                                  216   #ifdef XASMAVR ;
                                  217   .SUBTTL Test: #undef - re-#define
                                  218   .EJECT
AVR Macro-Assembler, Version 2.1                          29/12/2024  PAGE   3
Test: Conditional assembly
Test: #undef - re-#define

 LOC       OBJ                   LINE   SOURCE

                                  219   #endif ;XASMAVR
                                  220   ; -------------------------------------------
                                  221     ;;----------------
 = 00000000                       222     #define symbol123  ; #define
 = 00000000                       223     #define symbol456
 = 00000000                       224     #define symbol789
                                  225     ;;----------------
                                  226     #ifdef symbol123   ; before #undef
 0000003A  00 00           :C     227     	nop
                                  228     #endif 
                                  229     #ifdef symbol456   ; before #undef
 0000003C  00 00           :C     230     	nop
                                  231     #endif 
                                  232     #ifdef symbol789   ; before #undef
 0000003E  00 00           :C     233     	nop
                                  234     #endif 
                                  235   
                                  236     ;----------------
                                  237     #ifndef symbol123  ; before #undef
                                  240     #endif 
                                  241     #ifndef symbol456  ; before #undef
                                  244     #endif 
                                  245     #ifndef symbol789  ; before #undef
                                  248     #endif 
                                  249   
                                  250   ;#ifdef XASMAVR
                                  251     ;;----------------
                                  252     #undef symbol123   ; #undef
                                  253     #undef symbol456
                                  254     #undef symbol789
                                  255     ;;----------------
                                  256     #ifdef symbol123   ; after #undef
                                  259     #endif 
                                  260     #ifdef symbol456   ; after #undef
                                  263     #endif 
                                  264     #ifdef symbol789   ; after #undef
                                  267     #endif 
                                  268   
                                  269     ;----------------
                                  270     #ifndef symbol123  ; after #undef
 00000040  00 00           :C     271     	nop
                                  272     #endif 
                                  273     #ifndef symbol456  ; after #undef
 00000042  00 00           :C     274     	nop
                                  275     #endif 
                                  276     #ifndef symbol789  ; after #undef
 00000044  00 00           :C     277     	nop
                                  278     #endif 
                                  279   ;#endif ;XASMAVR
                                  280   
                                  281   #ifdef XASMAVR
                                  282     ;; #undef'd symbols #define'd again
                                  283     ;;---------------
                                  284     #define symbol123
                                  285     #define symbol456
                                  286     #define symbol789
                                  287     ;;---------------
                                  288     #ifdef symbol123   ; after #define
 00000046  00 00           :C     289     	nop
                                  290     #endif 
                                  291     #ifdef symbol456   ; after #define
 00000048  00 00           :C     292     	nop
                                  293     #endif 
                                  294     #ifdef symbol789   ; after #define
 0000004A  00 00           :C     295     	nop
                                  296     #endif 
                                  297   
                                  298     ;----------------
                                  299     #ifndef symbol123  ; after #define
                                  302     #endif 
                                  303     #ifndef symbol456  ; after #define
                                  306     #endif 
                                  307     #ifndef symbol789  ; after #define
                                  310     #endif 
                                  311   
                                  312   #endif ;XASMAVR
                                  313   
                                  314   #endif ;SUPPRESS
                                  315   .EXIT

USER SYMBOLS

CPU_Clock . . . . . . . . . . . . . . .  017D7840 A  CPU_Clock1. . . . . . . . . . . . . . .  000186A0 A  
cycles. . . . . . . . . . . . . . . . .  FFFFFFFF A  cyclTime. . . . . . . . . . . . . . . .  00000087 A  
FOO1. . . . . . . . . . . . . . . . . .  00000100 A  FOO2. . . . . . . . . . . . . . . . . .  00000200 A  
FOO4. . . . . . . . . . . . . . . . . .  00000400 A  freqHz. . . . . . . . . . . . . . . . .  00708000 A  
label1. . . . . . . . . . . . . . . . .  0000000A C  label2. . . . . . . . . . . . . . . . .  00000010 C  
label4. . . . . . . . . . . . . . . . .  0000001A C  symbol123 . . . . . . . . . . . . . . .  00000001 A  
symbol456 . . . . . . . . . . . . . . .  00000001 A  symbol789 . . . . . . . . . . . . . . .  00000001 A  
XASMAVR . . . . . . . . . . . . . . . .  00000001 A  

 Info - Memory segments organization
        CSEG: Start = 0x00000000  End = 0x0000004C  Size = 76 byte(s)
        CSEG: Code size = 76 bytes

        DSEG: Start = 0x00002000  End = 0x00002000  Size = 0 byte(s)
        DSEG: Data size = 0 bytes

        ESEG: Start = 0x00001000  End = 0x00001000  Size = 0 byte(s)
        ESEG: Data size = 0 bytes

ASSEMBLY COMPLETE,   NO ERRORS
